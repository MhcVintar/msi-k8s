# storage class
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: postgres-storage-class
provisioner: kubernetes.io/hostPath
volumeBindingMode: WaitForFirstConsumer

---
# persistent volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-storage-volume
spec:
  storageClassName: postgres-storage-class
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  hostPath:
    path: /var/lib/postgresql/data

---
# persistent volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    com.musify.service: postgres-storage-claim
  name: postgres-storage-claim
spec:
  storageClassName: postgres-storage-class
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    com.musify.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      com.musify.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        com.musify.service: postgres
    spec:
      containers:
        - image: jakepel03/musify-db:1.0
          name: postgres
          envFrom:
            - configMapRef:
                name: musify-configmap
            - secretRef:
                name: musify-secrets
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage-volume
      restartPolicy: Always
      volumes:
        - name: postgres-storage-volume
          persistentVolumeClaim:
            claimName: postgres-storage-claim

---
# service
apiVersion: v1
kind: Service
metadata:
  labels:
    com.musify.service: postgres
  name: postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    com.musify.service: postgres
