# storage class
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: minio-storage-class
provisioner: kubernetes.io/hostPath
volumeBindingMode: WaitForFirstConsumer

---
# persistent volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-storage-volume
spec:
  storageClassName: minio-storage-class
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  hostPath:
    path: /musify/volume/minio

---
# persistent volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    com.musify.service: minio-storage-claim
  name: minio-storage-claim
spec:
  storageClassName: minio-storage-class
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    com.musify.service: minio
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      com.musify.service: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        com.musify.service: minio
    spec:
      containers:
        - image: jakepel03/musify-minio:1.0
          name: minio
          envFrom:
            - configMapRef:
                name: musify-configmap
            - secretRef:
                name: musify-secrets
          ports:
            - containerPort: 9000
              hostPort: 9000
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: minio-storage-volume
      restartPolicy: Always
      volumes:
        - name: minio-storage-volume
          persistentVolumeClaim:
            claimName: minio-storage-claim

---
# service
apiVersion: v1
kind: Service
metadata:
  labels:
    com.musify.service: minio
  name: minio
spec:
  ports:
    - name: "9000"
      port: 9000
      targetPort: 9000
  selector:
    com.musify.service: minio
